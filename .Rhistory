sem <- mediate(vaccination_status ~ hope +  (vaccine_hesitancy), z = age + gender + education + residence + income + occupation + province, data = df_video_intervention, n.iter = 10000)
sink("fsem.txt")
fsem1 <- sem(mod1, data = df_video_intervention, se = "bootstrap", bootstrap = 10000) # fit structural equation models
# sem <- mediate(vaccination_status ~ hope +  (vaccine_hesitancy), z = age + gender + education + residence + income + occupation + province, data = df_video_intervention, n.iter = 10000)
sink("fsem.txt")
summary(fsem1)
# setup
set.seed(123)
library(tidyverse) # pipeline operation
library(haven)
library(ggplot2) #
library(weights) # weighted result
library(srvyr) # deal with survey data
library(fastR2)
library(readxl)
library(lavaan)
library(psych)
library(MBESS)
library(mediation)
library(here) # get current path
df_video_intervention <- read_sav(here("Data","china_data","20210601 data video intervention.sav"))
## variable coding ------
## SS: consent to participate
## QQ: grouping: 1 - intervention group a; 2 - intervention group b; 3 - intervention group c; 4 - control group
df_video_intervention$group <- as.factor(df_video_intervention$QQ)
## PartVQ: 1 - those who can see the fourth option; 2 - those who cannot
## LA (ordinary vaccine)\LB (COVID-19 vaccine): from 1 - strong disagree to 5 - strongly agree
## LC: 1 - yes; 2 - no
## Basic infomation Q1 - Q11
##
df_video_intervention$age <- as.factor(df_video_intervention$Q3A)
df_video_intervention$gender <- as.factor(df_video_intervention$Q4)
df_video_intervention$province <- as.factor(df_video_intervention$Q5)
df_video_intervention$ethnicity <- as.factor(df_video_intervention$Q6)
df_video_intervention$residence <- as.factor(df_video_intervention$Q7)
df_video_intervention$education <- as.factor(df_video_intervention$Q8)
df_video_intervention$occupation <- as.factor(df_video_intervention$Q9)
df_video_intervention$income <- as.factor(df_video_intervention$Q10)
# Q1: Have you ever been diagnosed with the new coronavirus disease?
df_video_intervention %>%
group_by(QQ) %>%
summarise_at(vars(Q1, Q2_1, Q2_2, Q2_3, Q2_4, Q2_5), funs(counts))
# Q2: Has anyone in your family, neighbors, coworkers, friends or other people you know been diagnosed with the new coronavirus disease? (2-1: family member; 2-2: friend; 2-3 neighbors; 2-4 coworkers; 2-5 others)
df_video_intervention %>%
group_by(QQ) %>%
summarise_at(vars(Q1, Q2_1, Q2_2, Q2_3, Q2_4, Q2_5), funs(counts))
# Q3: Age
df_video_intervention %>%
group_by(QQ) %>%
summarise_at(vars(age), funs(counts))
# Q4: gender
df_video_intervention %>%
group_by(QQ) %>%
summarise_at(vars(gender), funs(counts))
# Q5: province
df_province <- df_video_intervention %>%
group_by(QQ) %>%
summarise_at(vars(province), funs(counts))
#write.csv(df_province, file = "result/tables/province.csv")
# Q6: ethnicity
df_video_intervention %>%
group_by(QQ) %>%
summarise_at(vars(ethnicity), funs(counts))
# Q7: residence
df_video_intervention %>%
#  group_by(QQ) %>%
summarise_at(vars(residence), funs(counts))
# Q8: education
df_video_intervention %>%
#  group_by(QQ) %>%
summarise_at(vars(education), funs(counts))
# Q9: occupation
df_video_intervention %>%
group_by(QQ) %>%
summarise_at(vars(occupation), funs(counts))
# Q10: income
df_video_intervention %>%
group_by(QQ) %>%
summarise_at(vars(income), funs(counts))
# Q11: Where do you receive your primary information on vaccine?
df_video_intervention %>%
group_by(QQ) %>%
summarise_at(vars(Q11_1, Q11_2, Q11_3, Q11_4, Q11_5, Q11_6, Q11_7), funs(counts))
df_weight <- read_xlsx(path = "Weights.xlsx", sheet = 1, na = "NA")
df_video_intervention$weight <- rep(0,12000)
for (i in 1:12000){
j = df_video_intervention$Q4[i] # gender
k = df_video_intervention$Q5[i] # province
l = df_video_intervention$Q7[i] # residence
df_video_intervention$weight[i] = as.numeric(df_weight[k,2*j+l-2])
}
### 1. vaccine hesitancy ---------
#### transform the negative problem scores to the positive
attach(df_video_intervention)
df_video_intervention$vaccine_hesitancy <- ((6 - LA_1) + (6 - LA_2) + (6 - LA_3) + (6 - LA_4) + LA_5 +(6 - LA_6) + (6 - LA_7) + (6 - LA_8) + LA_9 + LA_10 + (6 - LA_11) + LA_12 + LA_13 + LA_14) / 14
df_video_intervention$vaccine_confidence <- 6 - df_video_intervention$vaccine_hesitancy
detach()
### 2. COVID-19 vaccine hesitancy ----
#### transform the negative problem scores to the positive
attach(df_video_intervention)
df_video_intervention$covid19_vaccine_hesitancy <- ((6 - LB_1) + (6 - LB_2) + (6 - LB_3) + (6 - LB_4) + LB_5 +(6 - LB_6) + (6 - LB_7) + (6 - LB_8) + LB_9 + LB_10 + LB_11 + LB_12) / 12
df_video_intervention$covid19_vaccine_confidence <- 6 - df_video_intervention$covid19_vaccine_hesitancy
detach()
### 3. vaccination status ----
df_video_intervention$vaccination_status = ifelse(df_video_intervention$LC_2==2,0,1)
### 4. hope scale --------
# agency
df_video_intervention$agency = with(df_video_intervention, (I1_2 + I1_9 + I1_10 + I1_12)/4)
# pathway
df_video_intervention$pathway = with(df_video_intervention, (I1_1 + I1_4 + I1_6 + I1_8)/4)
# hope
df_video_intervention$hope = (df_video_intervention$agency + df_video_intervention$pathway)/2
### some statistics of outcome -----
df_video_intervention %>%
group_by(vaccination_status) %>%
summarise_at(vars(vaccine_hesitancy,  hope),
list(~mean(.), ~sd(.), ~n()))
df_video_intervention %>%
summarise_at(vars(vaccine_hesitancy,  hope),
list(~mean(.), ~sd(.)))
summary(glm(data = df_video_intervention, vaccination_status~hope+vaccine_hesitancy, family = "binomial"))
summary(glm(data = df_video_intervention, hope~vaccine_hesitancy))
mod1 <- "# a path
vaccine_confidence ~ a * hope
# b path
vaccination_status ~ b * vaccine_confidence
# c prime path
vaccination_status ~ cp * hope
# indirect and total effects
ab := a * b
total := cp + ab"
fsem1 <- sem(mod1, data = df_video_intervention, se = "bootstrap", bootstrap = 10000) # fit structural equation models
sink("fsem.txt")
summary(fsem1)
model1 <- lm(data = df_video_intervention, hope~vaccine_confidence + age + gender
+ residence + education + occupation + income)
model2 <- glm(data = df_video_intervention, vaccination_status~hope+vaccine_confidence + age + gender
+ residence + education + occupation + income, family = "binomial")
sem <- mediate(model1, model2, treat = "vaccine_confidence", mediator = "hope", boot = T)
sink("sem.txt")
summary(sem)
sink()
# semb<-mediate(vaccination_status ~ hope +  (vaccine_hesitancy), z = age + male + urban  + college + poor + provider, data = comdem[black == 1,], n.iter = 10000)
# sink("fsem_blk.txt")
# summary(semb)
#
# sink()
#
#
# semu<-mediate(vaccination_status ~ hope +  (vaccine_hesitancy), z = age + male  + black + college + poor + provider, data = comdem[urban == 1,], n.iter = 10000)
# sink("fsem_urban.txt")
#
# summary(semu)
# sink()
#
# semu<-mediate(vaccination_status ~ hope +  (vaccine_hesitancy), z = age + male  + black + college + poor + provider, data = comdem[urban == 0,], n.iter = 10000)
# semc<-mediate(vaccination_status ~ hope +  (vaccine_hesitancy), z = age + male  + black + urban + poor + provider, data = comdem[college == 0,], n.iter = 10000)
# semp<-mediate(vaccination_status ~ hope +  (vaccine_hesitancy), z = age + male  + black + urban + college + provider, data = comdem[poor == 1,], n.iter = 10000)
#
# sink("fsem_ucp.txt")
#
# summary(semu)
# summary(semc)
# summary(semp)
# sink()
#
# semm<-mediate(vaccination_status ~ hope +  (vaccine_hesitancy), z = age + male + urban + black + college + poor + provider, data = comdem, n.iter = 10000)
R.version
sink()
R.version
version
# setup
set.seed(123)
library(tidyverse) # pipeline operation
library(haven)
library(ggplot2) #
library(weights) # weighted result
library(srvyr) # deal with survey data
library(fastR2)
library(readxl)
library(lavaan)
library(psych)
library(MBESS)
library(mediation)
library(here) # get current path
df_weight <- read_xlsx(path = "Weights.xlsx", sheet = 1, na = "NA")
df_video_intervention$weight <- rep(0,12000)
for (i in 1:12000){
j = df_video_intervention$Q4[i] # gender
k = df_video_intervention$Q5[i] # province
l = df_video_intervention$Q7[i] # residence
df_video_intervention$weight[i] = as.numeric(df_weight[k,2*j+l-2])
}
wpct(df_video_intervention$vaccine_confidence, df_video_intervention$weight)
u<-wpct(df_video_intervention$vaccine_confidence, df_video_intervention$weight)
u<-wpct(df_video_intervention$vaccine_confidence, df_video_intervention$weight)
histogram(u)
df_video_intervention %>%
group_by(vaccination_status) %>%
weighted.mean(vaccine_confidence, weight)
df_video_intervention %>%
group_by(vaccination_status) %>%
summarise(weighted.mean(hope, weight))
df_video_intervention %>%
group_by(vaccination_status) %>%
summarise(weighted.mean(vaccine_confidence, weight))
sink("basic_statistics.txt")
df_video_intervention %>%
group_by(vaccination_status) %>%
summarise(weighted.mean(hope, weight))
df_video_intervention %>%
group_by(vaccination_status) %>%
summarise(weighted.mean(vaccine_confidence, weight))
sink()
df_video_intervention %>%
group_by(vaccination_status) %>%
summarise(weighted.mean(hope, weight)) %>%
knitr::knit()
df_video_intervention %>%
group_by(vaccination_status) %>%
summarise(weighted.mean(hope, weight)) %>%
print()
library(kableExtra)
df_video_intervention %>%
group_by(vaccination_status) %>%
summarise(weighted.mean(hope, weight)) %>%
kbl()
sink("basic_statistics.txt")
df_video_intervention %>%
group_by(vaccination_status) %>%
summarise(weighted.mean(hope, weight)) %>%
kbl()
df_video_intervention %>%
group_by(vaccination_status) %>%
summarise(weighted.mean(hope, weight))
df_video_intervention %>%
group_by(vaccination_status) %>%
summarise(weighted.mean(hope, weight)) %>%
print()
df_video_intervention %>%
group_by(vaccination_status) %>%
summarise(weighted.mean(vaccine_confidence, weight)) %>%
print()
sink("basic_statistics.txt")
df_video_intervention %>%
group_by(vaccination_status) %>%
summarise(weighted.mean(hope, weight)) %>%
print()
df_video_intervention %>%
group_by(vaccination_status) %>%
summarise(weighted.mean(vaccine_confidence, weight)) %>%
print()
sink()
hope<-df_video_intervention %>%
group_by(vaccination_status) %>%
summarise(weighted.mean(hope, weight))
print(hope)
print(as.tibble(hope))
print(as_tibble(hope))
sink("basic_statistics.txt")
hope<-df_video_intervention %>%
group_by(vaccination_status) %>%
summarise(weighted.mean(hope, weight))
print(as_tibble(hope))
1+1
hope
sink("basic_statistics.txt")
hope_tibble<-df_video_intervention %>%
group_by(vaccination_status) %>%
summarise(weighted.mean(hope, weight))
hope_tibble
confidence_tibble<-df_video_intervention %>%
group_by(vaccination_status) %>%
summarise(weighted.mean(vaccine_confidence, weight))
confidence_tibble
sink()
mod1 <- "# a path
vaccine_confidence ~ a * hope
# b path
vaccination_status ~ b * vaccine_confidence
# c prime path
vaccination_status ~ cp * hope
# indirect and total effects
ab := a * b
total := cp + ab"
fsem1 <- sem(mod1, data = df_video_intervention, se = "bootstrap", bootstrap = 10000) # fit structural equation models
sink("fsem.txt")
summary(fsem1)
sink()
model1 <- lm(data = df_video_intervention, hope~vaccine_confidence + age + gender
+ residence + education + occupation + income)
df_video_intervention$age <- as.factor(df_video_intervention$Q3A)
df_video_intervention$gender <- as.factor(df_video_intervention$Q4)
df_video_intervention$province <- as.factor(df_video_intervention$Q5)
df_video_intervention$ethnicity <- as.factor(df_video_intervention$Q6)
df_video_intervention$residence <- as.factor(df_video_intervention$Q7)
df_video_intervention$education <- as.factor(df_video_intervention$Q8)
df_video_intervention$occupation <- as.factor(df_video_intervention$Q9)
df_video_intervention$income <- as.factor(df_video_intervention$Q10)
model1 <- lm(data = df_video_intervention, hope~ vaccine_confidence + age + gender
+ residence + education + occupation + income)
model2 <- glm(data = df_video_intervention, vaccination_status~hope+vaccine_confidence + age + gender
+ residence + education + occupation + income, family = "binomial")
sem <- mediate(model1, model2, treat = "hope", mediator = "vaccine_confidence", boot = T)
sink("sem.txt")
summary(sem)
sink()
sink("basic_statistics.txt")
hope_tibble
confidence_tibble
model1 <- lm(data = df_video_intervention, vaccine_confidence ~ hope + age + gender
+ residence + education + occupation + income)
model2 <- glm(data = df_video_intervention, vaccination_status~hope+vaccine_confidence + age + gender
+ residence + education + occupation + income, family = "binomial")
sem <- mediate(model1, model2, treat = "hope", mediator = "vaccine_confidence", boot = T)
sink("sem.txt")
summary(sem)
sink()
sink("sem.txt")
summary(sem)
plot(sem)
sink()
plot(sem)
sink()
model1 <- lm(data = df_video_intervention, vaccine_confidence ~ hope)
model2 <- glm(data = df_video_intervention, vaccination_status ~ hope + vaccine_confidence, family = "binomial")
sem0 <- mediate(model1, model2, treat = "hope", mediator = "vaccine_confidence", boot = T)
summary(sem0)
plot(sem0)
plot(sem0)
summary(sem0)
# setup
set.seed(123)
library(tidyverse) # pipeline operation
library(haven)
library(ggplot2) #
library(weights) # weighted result
library(srvyr) # deal with survey data
library(fastR2)
library(readxl)
library(lavaan)
library(psych)
library(MBESS)
library(mediation)
library(here) # get current path
sink("basic_statistics and regression_result.txt")
hope_tibble<-df_video_intervention %>%
#  group_by(vaccination_status) %>%
summarise(mean(hope))
hope_tibble
confidence_tibble<-df_video_intervention %>%
#  group_by(vaccination_status) %>%
summarise(mean(vaccine_confidence))
confidence_tibble
summary(lm(data = df_video_intervention, vaccination_status ~ hope))
sink()
sink("basic_statistics and regression_result.txt")
hope_tibble<-df_video_intervention %>%
#  group_by(vaccination_status) %>%
summarise(mean(hope))
hope_tibble
confidence_tibble<-df_video_intervention %>%
#  group_by(vaccination_status) %>%
summarise(mean(vaccine_confidence))
confidence_tibble
summary(lm(data = df_video_intervention, vaccination_status ~ hope))
hope_tibble
confidence_tibble
# setup
set.seed(123)
library(tidyverse) # pipeline operation
library(haven)
library(ggplot2) #
library(weights) # weighted result
library(srvyr) # deal with survey data
library(fastR2)
library(readxl)
library(lavaan)
library(psych)
library(MBESS)
library(mediation)
library(here) # get current path
library(gtsummary)
df_video_intervention %>%
mutate(
income_level = case_when(
as.numeric(income) <= 4 ~ 1,
as.numeric(income) > 4 ~ 2),
education_level = case_when(
as.numeric(education) <= 3 ~ 1,
as.numeric(education) > 3 ~ 2,
)
) %>%
select(income_level, education_level, residence, hope, vaccination_status) %>%
summarise(
hope_rural_yes = mean(hope[residence == 1 & vaccination_status == 1]),
hope_rural_yes_n = sum(residence == 1 & vaccination_status == 1),
hope_rural_yes_upp = mean(hope[residence == 1 & vaccination_status == 1]) + 1.96 * sd(hope[residence == 1 & vaccination_status == 1])/sqrt(hope_rural_yes_n),
hope_rural_yes_low = mean(hope[residence == 1 & vaccination_status == 1]) - 1.96 * sd(hope[residence == 1 & vaccination_status == 1])/sqrt(hope_rural_yes_n),
hope_rural_no = mean(hope[residence == 1 & vaccination_status == 0]),
hope_rural_no_n = sum(residence == 1 & vaccination_status == 0),
hope_rural_no_upp = mean(hope[residence == 1 & vaccination_status == 0]) + 1.96 * sd(hope[residence == 1 & vaccination_status == 0])/sqrt(hope_rural_no_n),
hope_rural_no_low = mean(hope[residence == 1 & vaccination_status == 0]) - 1.96 * sd(hope[residence == 1 & vaccination_status == 0])/sqrt(hope_rural_no_n),
hope_poor_yes = mean(hope[income_level == 1 & vaccination_status == 1]),
hope_poor_yes_n = sum(income_level == 1 & vaccination_status == 1),
hope_poor_yes_upp = mean(hope[income_level == 1 & vaccination_status == 1]) + 1.96 * sd(hope[income_level == 1 & vaccination_status == 1])/sqrt(hope_poor_yes_n),
hope_poor_yes_low = mean(hope[income_level == 1 & vaccination_status == 1]) - 1.96 * sd(hope[income_level == 1 & vaccination_status == 1])/sqrt(hope_poor_yes_n),
hope_poor_no = mean(hope[income_level == 1 & vaccination_status == 0]),
hope_poor_no_n = sum(income_level == 1 & vaccination_status == 0),
hope_poor_no_upp = hope_poor_no + 1.96 * sd(hope[income_level == 1 & vaccination_status == 0])/sqrt(hope_rural_yes_n),
hope_poor_no_low = hope_poor_no - 1.96 * sd(hope[income_level == 1 & vaccination_status == 0])/sqrt(hope_rural_yes_n),
hope_lowedu_yes = mean(hope[education_level == 1 & vaccination_status == 1]),
hope_lowedu_yes_n = sum(education_level == 1 & vaccination_status == 1),
hope_lowedu_yes_upp = hope_lowedu_yes + 1.96 * sd(hope[education_level == 1 & vaccination_status == 1])/sqrt(hope_lowedu_yes_n),
hope_lowedu_yes_low = hope_lowedu_yes - 1.96 * sd(hope[education_level == 1 & vaccination_status == 1])/sqrt(hope_lowedu_yes_n),
hope_lowedu_no = mean(hope[education_level == 1 & vaccination_status == 0]),
hope_lowedu_no_n = sum(education_level == 1 & vaccination_status == 0),
hope_lowedu_no_upp = hope_lowedu_no + 1.96 * sd(hope[education_level == 1 & vaccination_status == 0])/sqrt(hope_lowedu_no_n),
hope_lowedu_no_low = hope_lowedu_no - 1.96 * sd(hope[education_level == 1 & vaccination_status == 0])/sqrt(hope_lowedu_no_n),
)
library(gtsummary)
df_video_intervention %>%
filter(vaccination_status=0) %>%
select(vaccine_hesitancy, QQ) %>%
tbl_summary(
by = QQ,
all_continuous() ~ "{mean} ({sd})"
) %>%
add_p()
library(gtsummary)
df_video_intervention %>%
filter(vaccination_status==0) %>%
select(vaccine_hesitancy, QQ) %>%
tbl_summary(
by = QQ,
all_continuous() ~ "{mean} ({sd})"
) %>%
add_p()
library(gtsummary)
df_video_intervention %>%
filter(vaccination_status==0) %>%
select(vaccine_hesitancy, QQ) %>%
tbl_summary(
by = QQ
) %>%
add_p()
install.packages(""covid19")
install.packages("covid19")
yes
install.packages("COVID19")
library(gtsummary)
df_video_intervention %>%
filter(vaccination_status==0) %>%
select(vaccine_hesitancy, QQ) %>%
tbl_summary(
all_continuous() ~ "{mean} ({sd})"
by = QQ
library(gtsummary)
df_video_intervention %>%
filter(vaccination_status==0) %>%
select(vaccine_hesitancy, QQ) %>%
tbl_summary(
statistic = all_continuous() ~ "{mean} ({sd})"
by = QQ
library(gtsummary)
df_video_intervention %>%
filter(vaccination_status==0) %>%
select(vaccine_hesitancy, QQ) %>%
tbl_summary(
statistic = all_continuous() ~ "{mean} ({sd})",
by = QQ
) %>%
add_p()
library(gtsummary)
df_video_intervention %>%
filter(vaccination_status==0) %>%
select(vaccine_hesitancy, QQ) %>%
tbl_summary(
statistic = all_continuous() ~ "{mean} ({sd})",
by = QQ
) %>%
add_p()
df_video_intervention %>%
select(vaccination_status, QQ) %>%
tbl_summary(
statistic = all_continuous() ~ "{mean} ({sd})",
by = QQ
) %>%
add_p()
#-----------------------multinomial logistic regression-------------------------
pacman::p_load(openxlsx, fastR2, weights, gmodels, survey, data.table, dplyr, ggplot2, tidyverse, magrittr, survival, survminer, naniar, corrplot, mice, lavaan, install = T)
install.packages(")library(credentials)set_github_pat('刚刚获取的token')
stat
stat.anova()
df=1
summary(1=1)
install.packages(")
library(credentials)
set_github_pat('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')
install.packages("credentials")
library(credentials)
set_github_pat('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')
install.packages("credentials")
library(credentials)
set_github_pat('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')
library(gitcreds)
gitcreds_set(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)
library(gitcreds)
> gitcreds_set("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")
library(gitcreds) gitcreds_set(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)
library(gitcreds)
gitcreds_set("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")
