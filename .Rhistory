df_watchingtime_A <-  df_video_intervention$TA2_2_T
s <- tibble(s = 1:12000)
df_watchingtime <- sort(df_watchingtime$df_watchingtime)
df_watchingtime <- as.data.frame(df_watchingtime)
df_watchingtime <- df_watchingtime %>%
mutate(s)
#25%，50%，75% (average time)
df_watchingtime <- df_watchingtime %>%
mutate(
group = case_when(
as.numeric(s) <= 4000 ~ 1,
as.numeric(s) > 4000 & as.numeric(s)<= 8000 ~ 2,
as.numeric(s) > 8000 ~ 3 )
)
df_watchingtime %>%
group_by(group)%>%
summarise_at(vars(df_watchingtime),list(~mean(.)))
df_watchingtime  %>%
select(df_watchingtime, group) %>%
tbl_summary(
statistic = all_continuous() ~ "{mean} ({sd})",
by = group
) %>%
add_p()
#25%，50%，75% (percentage)
dev.off()
# setup
set.seed(123)
library(tidyverse) # pipeline operation
library(haven)
library(ggplot2) #
library(weights) # weighted result
library(srvyr) # deal with survey data
library(fastR2)
library(readxl)
library(lavaan)
library(psych)
library(MBESS)
library(mediation)
library(here) # get current path
library(gtsummary)
library(reshape)
df_video_intervention <- read_sav(here("Data","china_data","20210601 data video intervention.sav"))
## variable coding ------
## SS: consent to participate
## QQ: grouping: 1 - intervention group a; 2 - intervention group b; 3 - intervention group c; 4 - control group
df_video_intervention$group <- as.factor(df_video_intervention$QQ)
## PartVQ: 1 - those who can see the fourth option; 2 - those who cannot
## LA (ordinary vaccine)\LB (COVID-19 vaccine): from 1 - strong disagree to 5 - strongly agree
## LC: 1 - yes; 2 - no
## Basic infomation Q1 - Q11
##
df_video_intervention$age <- as.factor(df_video_intervention$Q3A)
df_video_intervention$gender <- as.factor(df_video_intervention$Q4)
df_video_intervention$province <- as.factor(df_video_intervention$Q5)
df_video_intervention$ethnicity <- as.factor(df_video_intervention$Q6)
df_video_intervention$residence <- as.factor(df_video_intervention$Q7)
df_video_intervention$education <- as.factor(df_video_intervention$Q8)
df_video_intervention$occupation <- as.factor(df_video_intervention$Q9)
df_video_intervention$income <- as.factor(df_video_intervention$Q10)
# Q1: Have you ever been diagnosed with the new coronavirus disease?
df_video_intervention %>%
group_by(QQ) %>%
summarise_at(vars(Q1, Q2_1, Q2_2, Q2_3, Q2_4, Q2_5), funs(counts))
# Q2: Has anyone in your family, neighbors, coworkers, friends or other people you know been diagnosed with the new coronavirus disease? (2-1: family member; 2-2: friend; 2-3 neighbors; 2-4 coworkers; 2-5 others)
df_video_intervention %>%
group_by(QQ) %>%
summarise_at(vars(Q1, Q2_1, Q2_2, Q2_3, Q2_4, Q2_5), funs(counts))
# Q3: Age
df_video_intervention %>%
group_by(QQ) %>%
summarise_at(vars(age), funs(counts))
# Q4: gender
df_video_intervention %>%
group_by(QQ) %>%
summarise_at(vars(gender), funs(counts))
# Q5: province
df_province <- df_video_intervention %>%
group_by(QQ) %>%
summarise_at(vars(province), funs(counts))
#write.csv(df_province, file = "result/tables/province.csv")
# Q6: ethnicity
df_video_intervention %>%
group_by(QQ) %>%
summarise_at(vars(ethnicity), funs(counts))
# Q7: residence
df_video_intervention %>%
#  group_by(QQ) %>%
summarise_at(vars(residence), funs(counts))
# Q8: education
df_video_intervention %>%
#  group_by(QQ) %>%
summarise_at(vars(education), funs(counts))
# Q9: occupation
df_video_intervention %>%
group_by(QQ) %>%
summarise_at(vars(occupation), funs(counts))
# Q10: income
df_video_intervention %>%
group_by(QQ) %>%
summarise_at(vars(income), funs(counts))
# Q11: Where do you receive your primary information on vaccine?
df_video_intervention %>%
group_by(QQ) %>%
summarise_at(vars(Q11_1, Q11_2, Q11_3, Q11_4, Q11_5, Q11_6, Q11_7), funs(counts))
### 1. vaccine hesitancy ---------
#### transform the negative problem scores to the positive
attach(df_video_intervention)
df_video_intervention$vaccine_hesitancy <- ((6 - LA_1) + (6 - LA_2) + (6 - LA_3) + (6 - LA_4) + LA_5 +(6 - LA_6) + (6 - LA_7) + (6 - LA_8) + LA_9 + LA_10 + (6 - LA_11) + LA_12 + LA_13 + LA_14) / 14
df_video_intervention$vaccine_confidence <- 6 - df_video_intervention$vaccine_hesitancy
detach()
### 2. COVID-19 vaccine hesitancy ----
#### transform the negative problem scores to the positive
attach(df_video_intervention)
df_video_intervention$covid19_vaccine_hesitancy <- ((6 - LB_1) + (6 - LB_2) + (6 - LB_3) + (6 - LB_4) + LB_5 +(6 - LB_6) + (6 - LB_7) + (6 - LB_8) + LB_9 + LB_10 + LB_11 + LB_12) / 12
df_video_intervention$covid19_vaccine_confidence <- 6 - df_video_intervention$covid19_vaccine_hesitancy
detach()
### 3. vaccination status ----
df_video_intervention$vaccination_status = ifelse(df_video_intervention$LC_2==2,0,1)
### 4. hope scale --------
# agency
df_video_intervention$agency = with(df_video_intervention, (I1_2 + I1_9 + I1_10 + I1_12)/4)
# pathway
df_video_intervention$pathway = with(df_video_intervention, (I1_1 + I1_4 + I1_6 + I1_8)/4)
# hope
df_video_intervention$hope = (df_video_intervention$agency + df_video_intervention$pathway)/2
### some statistics of outcome -----
df_video_intervention %>%
group_by(vaccination_status) %>%
summarise_at(vars(vaccine_hesitancy,  hope),
list(~mean(.), ~sd(.), ~n()))
df_video_intervention %>%
summarise_at(vars(vaccine_hesitancy,  hope),
list(~mean(.), ~sd(.)))
summary(glm(data = df_video_intervention, vaccination_status~hope+vaccine_hesitancy, family = "binomial"))
summary(glm(data = df_video_intervention, hope~vaccine_hesitancy))
library(gtsummary)
df_video_intervention %>%
filter(vaccination_status==0) %>%
select(vaccine_hesitancy, QQ) %>%
tbl_summary(
statistic = all_continuous() ~ "{mean} ({sd})",
by = QQ
) %>%
add_p()
df_video_intervention %>%
select(vaccination_status, QQ) %>%
tbl_summary(
statistic = all_continuous() ~ "{mean} ({sd})",
by = QQ
) %>%
add_p()
# grouped by intervention
library(ggplot2)
ggplot(data = df_video_intervention, mapping = aes(x = vaccine_hesitancy_score,  fill = as.factor(QQ))) +
geom_density(alpha = 0.3) +
labs(x = "Vaccine hesitancy", y = "Density", title = "")  +
theme(panel.background = element_rect())+ scale_fill_discrete(name = "Group", labels = c("Intervention group a", "Intervention group b", "Intervention group c", "Control group")) +
theme(panel.grid=element_blank(),axis.line=element_line(size=0.5, colour="black"),panel.grid.minor = element_blank()) + # delete the the grid but save the axis
theme_bw() # set background white
library(gtsummary)
df_video_intervention %>%
mutate(
income_level = case_when(
as.numeric(income) <= 4 ~ 1,
as.numeric(income) > 4 ~ 2),
education_level = case_when(
as.numeric(education) <= 3 ~ 1,
as.numeric(education) > 3 ~ 2,
)
) %>%
select(income_level, education_level, residence, hope, vaccination_status) %>%
summarise(
hope_rural_yes = mean(hope[residence == 1 & vaccination_status == 1]),
hope_rural_yes_n = sum(residence == 1 & vaccination_status == 1),
hope_rural_yes_upp = mean(hope[residence == 1 & vaccination_status == 1]) + 1.96 * sd(hope[residence == 1 & vaccination_status == 1])/sqrt(hope_rural_yes_n),
hope_rural_yes_low = mean(hope[residence == 1 & vaccination_status == 1]) - 1.96 * sd(hope[residence == 1 & vaccination_status == 1])/sqrt(hope_rural_yes_n),
hope_rural_no = mean(hope[residence == 1 & vaccination_status == 0]),
hope_rural_no_n = sum(residence == 1 & vaccination_status == 0),
hope_rural_no_upp = mean(hope[residence == 1 & vaccination_status == 0]) + 1.96 * sd(hope[residence == 1 & vaccination_status == 0])/sqrt(hope_rural_no_n),
hope_rural_no_low = mean(hope[residence == 1 & vaccination_status == 0]) - 1.96 * sd(hope[residence == 1 & vaccination_status == 0])/sqrt(hope_rural_no_n),
hope_poor_yes = mean(hope[income_level == 1 & vaccination_status == 1]),
hope_poor_yes_n = sum(income_level == 1 & vaccination_status == 1),
hope_poor_yes_upp = mean(hope[income_level == 1 & vaccination_status == 1]) + 1.96 * sd(hope[income_level == 1 & vaccination_status == 1])/sqrt(hope_poor_yes_n),
hope_poor_yes_low = mean(hope[income_level == 1 & vaccination_status == 1]) - 1.96 * sd(hope[income_level == 1 & vaccination_status == 1])/sqrt(hope_poor_yes_n),
hope_poor_no = mean(hope[income_level == 1 & vaccination_status == 0]),
hope_poor_no_n = sum(income_level == 1 & vaccination_status == 0),
hope_poor_no_upp = hope_poor_no + 1.96 * sd(hope[income_level == 1 & vaccination_status == 0])/sqrt(hope_rural_yes_n),
hope_poor_no_low = hope_poor_no - 1.96 * sd(hope[income_level == 1 & vaccination_status == 0])/sqrt(hope_rural_yes_n),
hope_lowedu_yes = mean(hope[education_level == 1 & vaccination_status == 1]),
hope_lowedu_yes_n = sum(education_level == 1 & vaccination_status == 1),
hope_lowedu_yes_upp = hope_lowedu_yes + 1.96 * sd(hope[education_level == 1 & vaccination_status == 1])/sqrt(hope_lowedu_yes_n),
hope_lowedu_yes_low = hope_lowedu_yes - 1.96 * sd(hope[education_level == 1 & vaccination_status == 1])/sqrt(hope_lowedu_yes_n),
hope_lowedu_no = mean(hope[education_level == 1 & vaccination_status == 0]),
hope_lowedu_no_n = sum(education_level == 1 & vaccination_status == 0),
hope_lowedu_no_upp = hope_lowedu_no + 1.96 * sd(hope[education_level == 1 & vaccination_status == 0])/sqrt(hope_lowedu_no_n),
hope_lowedu_no_low = hope_lowedu_no - 1.96 * sd(hope[education_level == 1 & vaccination_status == 0])/sqrt(hope_lowedu_no_n),
)
# setup
set.seed(123)
library(tidyverse) # pipeline operation
library(haven)
library(ggplot2) #
library(weights) # weighted result
library(srvyr) # deal with survey data
library(fastR2)
library(readxl)
library(lavaan)
library(psych)
library(MBESS)
library(mediation)
library(here) # get current path
library(gtsummary)
library(reshape)
df_video_intervention <- read_sav(here("Data","china_data","20210601 data video intervention.sav"))
## variable coding ------
## SS: consent to participate
## QQ: grouping: 1 - intervention group a; 2 - intervention group b; 3 - intervention group c; 4 - control group
df_video_intervention$group <- as.factor(df_video_intervention$QQ)
## PartVQ: 1 - those who can see the fourth option; 2 - those who cannot
## LA (ordinary vaccine)\LB (COVID-19 vaccine): from 1 - strong disagree to 5 - strongly agree
## LC: 1 - yes; 2 - no
## Basic infomation Q1 - Q11
##
df_video_intervention$age <- as.factor(df_video_intervention$Q3A)
df_video_intervention$gender <- as.factor(df_video_intervention$Q4)
df_video_intervention$province <- as.factor(df_video_intervention$Q5)
df_video_intervention$ethnicity <- as.factor(df_video_intervention$Q6)
df_video_intervention$residence <- as.factor(df_video_intervention$Q7)
df_video_intervention$education <- as.factor(df_video_intervention$Q8)
df_video_intervention$occupation <- as.factor(df_video_intervention$Q9)
df_video_intervention$income <- as.factor(df_video_intervention$Q10)
# Q1: Have you ever been diagnosed with the new coronavirus disease?
df_video_intervention %>%
group_by(QQ) %>%
summarise_at(vars(Q1, Q2_1, Q2_2, Q2_3, Q2_4, Q2_5), funs(counts))
# Q2: Has anyone in your family, neighbors, coworkers, friends or other people you know been diagnosed with the new coronavirus disease? (2-1: family member; 2-2: friend; 2-3 neighbors; 2-4 coworkers; 2-5 others)
df_video_intervention %>%
group_by(QQ) %>%
summarise_at(vars(Q1, Q2_1, Q2_2, Q2_3, Q2_4, Q2_5), funs(counts))
# Q3: Age
df_video_intervention %>%
group_by(QQ) %>%
summarise_at(vars(age), funs(counts))
# Q4: gender
df_video_intervention %>%
group_by(QQ) %>%
summarise_at(vars(gender), funs(counts))
# Q5: province
df_province <- df_video_intervention %>%
group_by(QQ) %>%
summarise_at(vars(province), funs(counts))
#write.csv(df_province, file = "result/tables/province.csv")
# Q6: ethnicity
df_video_intervention %>%
group_by(QQ) %>%
summarise_at(vars(ethnicity), funs(counts))
# Q7: residence
df_video_intervention %>%
#  group_by(QQ) %>%
summarise_at(vars(residence), funs(counts))
# Q8: education
df_video_intervention %>%
#  group_by(QQ) %>%
summarise_at(vars(education), funs(counts))
# Q9: occupation
df_video_intervention %>%
group_by(QQ) %>%
summarise_at(vars(occupation), funs(counts))
# Q10: income
df_video_intervention %>%
group_by(QQ) %>%
summarise_at(vars(income), funs(counts))
# Q11: Where do you receive your primary information on vaccine?
df_video_intervention %>%
group_by(QQ) %>%
summarise_at(vars(Q11_1, Q11_2, Q11_3, Q11_4, Q11_5, Q11_6, Q11_7), funs(counts))
#
df_video_intervention <- df_video_intervention%>%
tidyr::replace_na(list(TA2_2_T=0, TB2_2_T=0, TC2_2_T=0))
df_video_intervention <- df_video_intervention %>%
mutate (watching_time_1 = TA2_2_T + TB2_2_T+ TC2_2_T)
df_watchingtime <-  df_video_intervention$watching_time_1
s <- tibble(s = 1:12000)
df_watchingtime <- sort(df_watchingtime)
df_watchingtime <- as.data.frame(df_watchingtime)
df_watchingtime <- df_watchingtime %>%
mutate(s)
df_watchingtime_A <-  df_video_intervention$TA2_2_T
s <- tibble(s = 1:12000)
df_watchingtime <- sort(df_watchingtime$df_watchingtime)
df_watchingtime <- as.data.frame(df_watchingtime)
df_watchingtime <- df_watchingtime %>%
mutate(s)
#25%，50%，75% (average time)
df_watchingtime <- df_watchingtime %>%
mutate(
group = case_when(
as.numeric(s) <= 4000 ~ 1,
as.numeric(s) > 4000 & as.numeric(s)<= 8000 ~ 2,
as.numeric(s) > 8000 ~ 3 )
)
df_watchingtime %>%
group_by(group)%>%
summarise_at(vars(df_watchingtime),list(~mean(.)))
df_watchingtime  %>%
select(df_watchingtime, group) %>%
tbl_summary(
statistic = all_continuous() ~ "{mean} ({sd})",
by = group
) %>%
add_p()
#25%，50%，75% (percentage)
View(df_watchingtime)
df_watchingtime  %>%
select(df_watchingtime, group) %>%
tbl_summary(
statistic = all_continuous() ~ "{mean} ({sd})",
by = group
) %>%
add_p()
library(gtsummary)
df_video_intervention %>%
filter(vaccination_status==0) %>%
select(vaccine_hesitancy, QQ) %>%
tbl_summary(
statistic = all_continuous() ~ "{mean} ({sd})",
by = QQ
) %>%
add_p()
#
df_video_intervention <- df_video_intervention%>%
tidyr::replace_na(list(TA2_2_T=0, TB2_2_T=0, TC2_2_T=0))
df_video_intervention <- df_video_intervention %>%
mutate (watching_time_1 = TA2_2_T + TB2_2_T+ TC2_2_T)
df_watchingtime <-  df_video_intervention$watching_time_1
s <- tibble(s = 1:12000)
df_watchingtime <- sort(df_watchingtime)
df_watchingtime <- as.data.frame(df_watchingtime)
df_watchingtime <- df_watchingtime %>%
mutate(s)
df_watchingtime_A <-  df_video_intervention$TA2_2_T
s <- tibble(s = 1:12000)
df_watchingtime <- sort(df_watchingtime$df_watchingtime)
df_watchingtime <- as.data.frame(df_watchingtime)
df_watchingtime <- df_watchingtime %>%
mutate(s)
#25%，50%，75% (average time)
df_watchingtime <- df_watchingtime %>%
mutate(
group = case_when(
as.numeric(s) <= 4000 ~ 1,
as.numeric(s) > 4000 & as.numeric(s)<= 8000 ~ 2,
as.numeric(s) > 8000 ~ 3 )
)
df_watchingtime %>%
group_by(group)%>%
summarise_at(vars(df_watchingtime),list(~mean(.)))
df_watchingtime  %>%
select(df_watchingtime, group) %>%
tbl_summary(
statistic = all_continuous() ~ "{mean} ({sd})",
by = group
) %>%
add_p()
#25%，50%，75% (percentage)
sum(tbl_summary())
sum(.)
#
df_video_intervention <- df_video_intervention%>%
tidyr::replace_na(list(TA2_2_T=0, TB2_2_T=0, TC2_2_T=0))
df_video_intervention <- df_video_intervention %>%
mutate (watching_time_1 = TA2_2_T + TB2_2_T+ TC2_2_T)
df_watchingtime <-  df_video_intervention$watching_time_1
s <- tibble(s = 1:12000)
df_watchingtime <- sort(df_watchingtime)
df_watchingtime <- as.data.frame(df_watchingtime)
df_watchingtime <- df_watchingtime %>%
mutate(s)
df_watchingtime_A <-  df_video_intervention$TA2_2_T
s <- tibble(s = 1:12000)
df_watchingtime <- sort(df_watchingtime$df_watchingtime)
df_watchingtime <- as.data.frame(df_watchingtime)
df_watchingtime <- df_watchingtime %>%
mutate(s)
#25%??50%??75% (average time)
df_watchingtime <- df_watchingtime %>%
mutate(
group = case_when(
as.numeric(s) <= 4000 ~ 1,
as.numeric(s) > 4000 & as.numeric(s)<= 8000 ~ 2,
as.numeric(s) > 8000 ~ 3 )
)
df_watchingtime %>%
group_by(group)%>%
summarise_at(vars(df_watchingtime),list(~mean(.)))
df_watchingtime  %>%
select(df_watchingtime, group) %>%
tbl_summary(
statistic = all_continuous() ~ "{mean} ({sd})",
by = group
) %>%
add_p()
#25%??50%??75% (percentage)
df_list_baseline = df_video_intervention[df_video_intervention$PartVQ == 2, ]
df_list_treatment = df_video_intervention[df_video_intervention$PartVQ == 1, ]
# baseline
#result1<- df_list_baseline %>%
#summarise_at(vars(PartVA_5_T, PartVB_5_T, PartVC_5_T, PartVD_5_T), funs(mean = wtd.mean(.,weight), sd = sqrt(wtd.var(.,weight))/sqrt(length(.))))
result1 <- df_list_baseline %>%
summarise_at(vars(PartVA_5_T, PartVB_5_T, PartVC_5_T, PartVD_5_T),
funs(mean(.)))
result1 <- result1 %>%
dplyr::mutate( total = PartVA_5_T + PartVB_5_T + PartVC_5_T + PartVD_5_T)
result1 <- t(result1)
result1 <- as.data.frame(result1)
names(result1) <- c("baseline")
# treatment
#result2 <- df_list_treatment %>%
#summarise_at(vars(PartVA_5_T, PartVB_5_T, PartVC_5_T, PartVD_5_T), funs(mean = wtd.mean(.,weight), sd = sqrt(wtd.var(.,weight))/sqrt(length(.))))
#result2
result2 <- df_list_treatment %>%
summarise_at(vars(PartVA_5_T, PartVB_5_T, PartVC_5_T, PartVD_5_T),
funs(mean(.)))
result2 <- result2 %>%
mutate(total=PartVA_5_T+PartVB_5_T+PartVC_5_T+PartVD_5_T)
result2 <- t(result2)
result2 <- as.data.frame(result2)
names(result2) <- c("treatment")
#table for list outcome
df_list_outcome <- result1
df_list_outcome <- df_list_outcome %>%
mutate(result2) %>%
mutate(difference = treatment - baseline)
# difference in means??weighted)
bs = sum(df_list_baseline$weight)
ts = sum(df_list_treatment$weight)
cbind(((bs*result2-ts*result1)/(bs+ts))[1:4],sqrt((bs*result1^2 + ts*result2^2)/(bs+ts))[5:8])
#
df_video_intervention <- df_video_intervention%>%
tidyr::replace_na(list(TA2_2_T=0, TB2_2_T=0, TC2_2_T=0))
df_video_intervention <- df_video_intervention %>%
mutate (watching_time_1 = TA2_2_T + TB2_2_T+ TC2_2_T)
df_watchingtime <-  df_video_intervention$watching_time_1
s <- tibble(s = 1:12000)
df_watchingtime <- sort(df_watchingtime)
df_watchingtime <- as.data.frame(df_watchingtime)
df_watchingtime <- df_watchingtime %>%
mutate(s)
df_watchingtime_A <-  df_video_intervention$TA2_2_T
s <- tibble(s = 1:12000)
df_watchingtime <- sort(df_watchingtime$df_watchingtime)
df_watchingtime <- as.data.frame(df_watchingtime)
df_watchingtime <- df_watchingtime %>%
mutate(s)
#25%50%75% (average time)
df_watchingtime <- df_watchingtime %>%
mutate(
group = case_when(
as.numeric(s) <= 4000 ~ 1,
as.numeric(s) > 4000 & as.numeric(s)<= 8000 ~ 2,
as.numeric(s) > 8000 ~ 3 )
)
df_watchingtime %>%
group_by(group)%>%
summarise_at(vars(df_watchingtime),list(~mean(.)))
df_watchingtime  %>%
select(df_watchingtime, group) %>%
tbl_summary(
statistic = all_continuous() ~ "{mean} ({sd})",
by = group
) %>%
add_p()
#25%_50%_75% (percentage)
#
df_video_intervention <- df_video_intervention%>%
tidyr::replace_na(list(TA2_2_T=0, TB2_2_T=0, TC2_2_T=0))
df_video_intervention <- df_video_intervention %>%
mutate (watching_time_1 = TA2_2_T + TB2_2_T+ TC2_2_T)
df_watchingtime <-  df_video_intervention$watching_time_1
s <- tibble(s = 1:12000)
df_watchingtime <- sort(df_watchingtime)
df_watchingtime <- as.data.frame(df_watchingtime)
df_watchingtime <- df_watchingtime %>%
mutate(s)
df_watchingtime_A <-  df_video_intervention$TA2_2_T
s <- tibble(s = 1:12000)
df_watchingtime <- sort(df_watchingtime$df_watchingtime)
df_watchingtime <- as.data.frame(df_watchingtime)
df_watchingtime <- df_watchingtime %>%
mutate(s)
#25%50%75% (average time)
df_watchingtime <- df_watchingtime %>%
mutate(
group = case_when(
as.numeric(s) <= 4000 ~ 1,
as.numeric(s) > 4000 & as.numeric(s)<= 8000 ~ 2,
as.numeric(s) > 8000 ~ 3 )
)
t <- df_watchingtime %>%
group_by(group)%>%
summarise_at(vars(df_watchingtime),list(~mean(.)))
df_watchingtime  %>%
select(df_watchingtime, group) %>%
tbl_summary(
statistic = all_continuous() ~ "{mean} ({sd})",
by = group
) %>%
add_p()
print(t)
#25%_50%_75% (percentage)
View(t)
